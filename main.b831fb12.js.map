{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","querySelectorAll","handleSelectRow","ev","elementRow","target","closest","contains","children","some","row","className","forEach","classList","remove","add","converter","string","replace","replaceAll","handleSortByCell","titleIndex","cellIndex","title","rowsForSorting","innerText","sort","current","next","currentCellString","cells","nextCellString","localeCompare","currentCellNum","nextCellNum","convertedCurrentNum","removeChild","newRow","appendChild","handleSortByCellReverse","titleIndexReverse","titleReverse","convertedNextNum","addEventListener","form","createElement","method","action","insertAdjacentHTML","body","append","saveButton","conditionChecker","nameInput","position","age","length","pushNotification","saveToTable","tr","preventDefault","inputName","value","inputPostion","selectOffice","inputAge","inputSalary","toLocaleString","positionTop","positionRight","description","type","message","messageTitle","messageDescription","dataset","qa","style","top","right","setTimeout"],"mappings":"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","file":"main.b831fb12.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.querySelectorAll('tr');\n\nthead.addEventListener('click', handleSortByCell);\nthead.addEventListener('dblclick', handleSortByCellReverse);\ntbody.addEventListener('click', handleSelectRow);\n\nfunction handleSelectRow(ev) {\n  const elementRow = ev.target.closest('tr');\n\n  if (!elementRow || !tbody.contains(elementRow)) {\n    return;\n  }\n\n  const checkingForClass = [...tbody.children]\n    .some(row => row.className === 'active');\n\n  if (checkingForClass === true) {\n    [...tbody.children].forEach(row => row.classList.remove('active'));\n  }\n  elementRow.classList.add('active');\n}\n\nfunction converter(string) {\n  return string.replace('$', '').replaceAll(',', '');\n}\n\nfunction handleSortByCell(ev) {\n  const titleIndex = ev.target.closest('th').cellIndex;\n  const title = ev.target.closest('th');\n  const rowsForSorting = [...tbody.children];\n\n  if (!title || !thead.contains(title)) {\n    return;\n  }\n\n  switch (title.innerText) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      rowsForSorting.sort((current, next) => {\n        const currentCellString = current.cells[titleIndex].innerText;\n        const nextCellString = next.cells[titleIndex].innerText;\n\n        return currentCellString.localeCompare(nextCellString);\n      });\n      break;\n\n    case 'Age':\n    case 'Salary':\n      rowsForSorting.sort((current, next) => {\n        const currentCellNum = current.cells[titleIndex].innerText;\n        const nextCellNum = next.cells[titleIndex].innerText;\n        const convertedCurrentNum = converter(currentCellNum);\n        const convertedNextNum = converter(nextCellNum);\n\n        return convertedCurrentNum - convertedNextNum;\n      });\n      break;\n  }\n\n  rows.forEach(row => tbody.removeChild(row));\n\n  rowsForSorting.forEach(newRow => tbody.appendChild(newRow));\n}\n\nfunction handleSortByCellReverse(ev) {\n  const titleIndexReverse = ev.target.closest('th').cellIndex;\n  const titleReverse = ev.target.closest('th');\n  const rowsForSorting = [...tbody.children];\n\n  if (!titleReverse || !thead.contains(titleReverse)) {\n    return;\n  }\n\n  switch (titleReverse.innerText) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      rowsForSorting.sort((current, next) => {\n        const currentCellString = current.cells[titleIndexReverse].innerText;\n        const nextCellString = next.cells[titleIndexReverse].innerText;\n\n        return nextCellString.localeCompare(currentCellString);\n      });\n      break;\n\n    case 'Age':\n    case 'Salary':\n      rowsForSorting.sort((current, next) => {\n        const currentCellNum = current.cells[titleIndexReverse].innerText;\n        const nextCellNum = next.cells[titleIndexReverse].innerText;\n        const convertedCurrentNum = converter(currentCellNum);\n        const convertedNextNum = converter(nextCellNum);\n\n        return convertedNextNum - convertedCurrentNum;\n      });\n      break;\n  }\n\n  rows.forEach(row => tbody.removeChild(row));\n\n  rowsForSorting.forEach(newRow => tbody.appendChild(newRow));\n}\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\nform.method = 'GET';\nform.action = '#';\n\nform.insertAdjacentHTML('afterbegin', `\n  <label>Name:\n    <input\n      class=\"cell-input name\"\n      type=\"text\"\n      name=\"name\"\n      data-qa=\"name\"\n      required\n    >\n  </label>\n  <label>Position:\n    <input\n      class=\"cell-input position\"\n      type=\"text\"\n      name=\"position\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n  <label>Office:\n    <select\n      class=\"cell-input office\"\n      name=\"office\"\n      data-qa=\"office\"\n      required\n    >\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input\n      class=\"cell-input age\"\n      type=\"number\"\n      name=\"age\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n  <label>Salary:\n    <input\n      class=\"cell-input salary\"\n      type=\"number\"\n      name=\"salary\"\n      data-qa=\"salary\"\n      required\n    >\n  </label>\n  <button type=\"submit\">Save to table</button>\n`);\n\ndocument.body.append(form);\n\nconst saveButton = form.querySelector('button');\n\nsaveButton.addEventListener('click', saveToTable);\n\nfunction conditionChecker(nameInput, position, age) {\n  const minLengthOfName = 4;\n  const minAge = 18;\n  const maxAge = 90;\n\n  if (nameInput.length < minLengthOfName) {\n    pushNotification(\n      150, 10,\n      'Error invalid input',\n      'The length of the name must be longer',\n      'error'\n    );\n  }\n\n  if (!position.length) {\n    pushNotification(\n      10, 10,\n      'Error invalid input',\n      'Position input required',\n      'error'\n    );\n  }\n\n  if (age < minAge || age > maxAge) {\n    pushNotification(\n      290, 10,\n      'Error invalid input',\n      'The age must be between 18 and 90',\n      'error'\n    );\n  }\n}\n\nfunction saveToTable(ev) {\n  const tr = document.createElement('tr');\n\n  ev.preventDefault();\n\n  const inputName = form.querySelector('.name').value;\n  const inputPostion = form.querySelector('.position').value;\n  const selectOffice = form.querySelector('.office').value;\n  const inputAge = form.querySelector('.age').value;\n  const inputSalary = +form.querySelector('.salary').value;\n\n  conditionChecker(inputName, inputPostion, inputAge, inputSalary);\n\n  if (\n    inputPostion\n    && inputSalary > 0\n    && inputName.length >= 4\n    && (inputAge >= 18 && inputAge <= 90)\n  ) {\n    tr.insertAdjacentHTML('afterbegin', `\n      <td>${inputName}</td>\n      <td>${inputPostion}</td>\n      <td>${selectOffice}</td>\n      <td>${inputAge}</td>\n      <td>${'$' + inputSalary.toLocaleString('en')}</td>\n  `);\n    tbody.appendChild(tr);\n\n    pushNotification(\n      10, 10,\n      'Success',\n      'New employee successfuly added to the table',\n      'success'\n    );\n  }\n}\n\nfunction pushNotification(\n  positionTop,\n  positionRight,\n  title,\n  description,\n  type\n) {\n  const body = document.querySelector('body');\n  const message = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  message.classList.add('notification', type);\n  message.dataset.qa = 'notification';\n  message.style.top = positionTop + 'px';\n  message.style.right = positionRight + 'px';\n\n  messageTitle.innerText = title;\n  messageTitle.classList.add('title');\n\n  messageDescription.innerText = description;\n\n  message.append(messageTitle, messageDescription);\n\n  body.append(message);\n\n  setTimeout(() => message.remove(), 6000);\n}\n"]}